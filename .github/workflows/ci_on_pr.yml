# SPDX-FileCopyrightText: 2006-2023, Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2023, Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: "CI"

on:
  push:
    branches:
      - 'main'
  pull_request:

concurrency:
  group: linux-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-22.04, compiler: spdx_license_lint}
          - {os: ubuntu-22.04, compiler: gcc13-cpp20-release}
          - {os: ubuntu-22.04, compiler: gcc13-cpp20-debug-sanitize_address}
          - {os: ubuntu-22.04, compiler: gcc13-cpp20-debug-sanitize_undefined}
          - {os: ubuntu-22.04, compiler: clang17-cpp20-release}
          - {os: macos-13,     compiler: clang17-cpp20-debug-sanitize_address}
          - {os: macos-13,     compiler: clang17-cpp20-debug-sanitize_undefined}
          - {os: macos-14,     compiler: clang17-cpp20-debug-sanitize_address}
          - {os: macos-14,     compiler: clang17-cpp20-debug-sanitize_undefined}
          - {os: windows-2022, compiler: msvc-cpp20-release}
          - {os: windows-2022, compiler: msvc-cpp20-relwithdebinfo-sanitize}
          - {os: windows-2022, compiler: msvc-cpp20-debug}
    steps:
      - name: Standard IV-project testing
        uses: iv-project/IVaction@v9.26
        with:
          compiler: ${{ matrix.compiler }}
          threads: 2
          cmake_flags: ${{ matrix.cmake_flags }}
          cmake_c_flags: ${{ matrix.cmake_c_flags }}
          cmake_cxx_flags: ${{ matrix.cmake_cxx_flags }}
      - uses: actions/setup-python@v5
        with:
          python-version: 'pypy3.8'
      - name: Install package in Python with testing dependencies
        working-directory: ./repo
        run: pip install '.[test]'
      - name: Test in Python
        run: pytest ./repo/tests/
  final:
    runs-on: ubuntu-22.04
    name: final-pass
    needs: build
    if: always()
    steps:
      - name: Succeeded
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: CI failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
